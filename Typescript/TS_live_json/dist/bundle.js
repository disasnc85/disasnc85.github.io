/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/AirQualityModule.ts":
/*!*********************************!*\
  !*** ./src/AirQualityModule.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAirQualityDataSnapshot = exports.getAirQualityDataLocation = exports.AirQualityDataLocation = exports.AirQualityData = void 0;\nvar AirQualityData = /** @class */ (function () {\n    function AirQualityData(dataSnapshots, location) {\n        this.dataSnapshots = dataSnapshots;\n        this.location = location;\n    }\n    return AirQualityData;\n}());\nexports.AirQualityData = AirQualityData;\nvar AirQualityDataLocation = /** @class */ (function () {\n    function AirQualityDataLocation() {\n    }\n    return AirQualityDataLocation;\n}());\nexports.AirQualityDataLocation = AirQualityDataLocation;\nvar getAirQualityDataLocation = function (location) {\n    var latitude = location.latitude;\n    var longitude = location.longitude;\n    var country = location.country;\n    var id = location.id;\n    var lat = latitude ? Number.parseFloat(latitude) : 0;\n    var lng = longitude ? Number.parseFloat(longitude) : 0;\n    if (isNaN(lat) || isNaN(lng)) {\n        throw new Error(\" Are you serious???\");\n    }\n    var airQualityDataLocation = new AirQualityDataLocation();\n    airQualityDataLocation.lat = lat;\n    airQualityDataLocation.lng = lng;\n    airQualityDataLocation.country = country;\n    airQualityDataLocation.placeId = 0;\n    return airQualityDataLocation;\n};\nexports.getAirQualityDataLocation = getAirQualityDataLocation;\nfunction getAirQualityDataSnapshot(firstApiResponse, secondApiResponse) {\n    return firstApiResponse.map(function (singleResult, index) {\n        var values = __spreadArray(__spreadArray([], singleResult.sensordatavalues, true), secondApiResponse[index].sensordatavalues, true);\n        var timestamp = singleResult.timestamp;\n        return {\n            values: values,\n            timestamp: timestamp,\n        };\n    });\n}\nexports.getAirQualityDataSnapshot = getAirQualityDataSnapshot;\n\n\n//# sourceURL=webpack://ts_live_json/./src/AirQualityModule.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar AirQualityModule_1 = __webpack_require__(/*! ./AirQualityModule */ \"./src/AirQualityModule.ts\");\nvar getAirQualityData = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response, status;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, fetch(url)];\n                case 1:\n                    response = _a.sent();\n                    status = response.ok;\n                    if (!status) return [3 /*break*/, 3];\n                    return [4 /*yield*/, response.json()];\n                case 2: return [2 /*return*/, _a.sent()]; //ogni volta che maneggi una promise devi aspettarla con await\n                case 3: throw new Error(\"Data not valid\");\n            }\n        });\n    });\n};\n// getAirQualityData = async function (url: string): Promise<Array<RawAirQualityData>> {\n// \tconst sensor_3329 = `[{\"timestamp\":\"2023-04-19 16:17:25\",\"location\":{\"exact_location\":0,\"indoor\":0,\"longitude\":\"11.288830455159294\",\"altitude\":\"286.7\",\"latitude\":\"44.72110112235471\",\"id\":1677,\"country\":\"DE\"},\"sampling_rate\":null,\"sensor\":{\"sensor_type\":{\"name\":\"SDS011\",\"manufacturer\":\"Nova Fitness\",\"id\":14},\"pin\":\"1\",\"id\":3329},\"sensordatavalues\":[{\"value\":\"3.67\",\"id\":33778692176,\"value_type\":\"P1\"},{\"value\":\"2.70\",\"id\":33778692177,\"value_type\":\"P2\"}],\"id\":15031669507},{\"timestamp\":\"2023-04-19 16:14:59\",\"location\":{\"exact_location\":0,\"indoor\":0,\"longitude\":\"11.288830455159294\",\"altitude\":\"286.7\",\"latitude\":\"44.72110112235471\",\"id\":1677,\"country\":\"DE\"},\"sampling_rate\":null,\"sensor\":{\"sensor_type\":{\"name\":\"SDS011\",\"manufacturer\":\"Nova Fitness\",\"id\":14},\"pin\":\"1\",\"id\":3329},\"sensordatavalues\":[{\"value\":\"3.47\",\"id\":33778632612,\"value_type\":\"P1\"},{\"value\":\"2.27\",\"id\":33778632614,\"value_type\":\"P2\"}],\"id\":15031644136}]`;\n// \tconst sensor_3330 = `[{\"timestamp\":\"2023-04-19 16:17:25\",\"location\":{\"exact_location\":0,\"indoor\":0,\"longitude\":\"11.288830455159294\",\"altitude\":\"286.7\",\"latitude\":\"44.72110112235471\",\"id\":1677,\"country\":\"DE\"},\"sampling_rate\":null,\"sensor\":{\"sensor_type\":{\"name\":\"DHT22\",\"manufacturer\":\"various\",\"id\":9},\"pin\":\"7\",\"id\":3330},\"sensordatavalues\":[{\"value\":\"12.00\",\"id\":33778692307,\"value_type\":\"temperature\"},{\"value\":\"56.30\",\"id\":33778692308,\"value_type\":\"humidity\"}],\"id\":15031669565},{\"timestamp\":\"2023-04-19 16:15:00\",\"location\":{\"exact_location\":0,\"indoor\":0,\"longitude\":\"11.288830455159294\",\"altitude\":\"286.7\",\"latitude\":\"44.72110112235471\",\"id\":1677,\"country\":\"DE\"},\"sampling_rate\":null,\"sensor\":{\"sensor_type\":{\"name\":\"DHT22\",\"manufacturer\":\"various\",\"id\":9},\"pin\":\"7\",\"id\":3330},\"sensordatavalues\":[{\"value\":\"11.90\",\"id\":33778632868,\"value_type\":\"temperature\"},{\"value\":\"55.10\",\"id\":33778632895,\"value_type\":\"humidity\"}],\"id\":15031644233}]`;\n// \treturn new Promise((resolve, reject) => {\n// \t\tif (url.includes(\"3329\")) {\n// \t\t\tconst p = JSON.parse(sensor_3329); // gli dai una stringa, ritorna un oggetto\n// \t\t\tresolve(p); //completa la promise e gli passa il suo risultato\n// \t\t\treturn;\n// \t\t}\n// \t\tif (url.includes(\"3330\")) {\n// \t\t\tconst p = JSON.parse(sensor_3330);\n// \t\t\tresolve(p);\n// \t\t\treturn;\n// \t\t}\n// \t\treject(new Error(\"ID not found\"));\n// \t});\n// };\n// in qesto modo gli diamo le operazioni da fare e l'array promises conterr√† 2 promises in questo caso\nvar promises = [\n    getAirQualityData(\"https://data.sensor.community/airrohr/v1/sensor/3329/\"),\n    getAirQualityData(\"https://data.sensor.community/airrohr/v1/sensor/3330/\"),\n];\n// mi permette di aspettare un set di promises e finisce quando sono arrivate tutte\nvar p = Promise.all(promises);\np.then(mapToAirQualityData);\nfunction mapToAirQualityData(promisesResult) {\n    var firstApiResponse = promisesResult[0];\n    var secondApiResponse = promisesResult[1];\n    var responseLocation = firstApiResponse[0].location;\n    var location = (0, AirQualityModule_1.getAirQualityDataLocation)(responseLocation);\n    var dataSnapshots = (0, AirQualityModule_1.getAirQualityDataSnapshot)(firstApiResponse, secondApiResponse);\n    var data = new AirQualityModule_1.AirQualityData(dataSnapshots, location);\n    showData(data);\n}\nfunction showData(data) {\n    var _a, _b, _c;\n    //Map\n    var mapContainer = document.querySelector(\".map\");\n    if (mapContainer) {\n        var lat = (_a = data.location.lat) !== null && _a !== void 0 ? _a : 0;\n        var lng = (_b = data.location.lng) !== null && _b !== void 0 ? _b : 0;\n        mapContainer.innerHTML = getMap({ width: 450, height: 250 }, lat, lng, 18);\n    }\n    //Crea location name\n    var getLocation = function (placeId, countryCode) {\n        var city = \"\";\n        var country = \"\";\n        // dovrebbe essere convertito da una function che torna il nome del posto sulla base del placeID\n        if (placeId === 1677)\n            city = \"Cento\";\n        // dovrebbe essere convertito da una function che torna il nome del country sulla base del countrycode\n        if (countryCode === \"DE\")\n            country = \"Italia\";\n        return \"\".concat(city, \" (\").concat(country, \")\");\n    };\n    var locationNameContainer = document.querySelector(\".air-quality-item-container .card-title\");\n    var placeID = typeof data.location.placeId === \"string\"\n        ? Number.parseInt(data.location.placeId)\n        : data.location.placeId;\n    locationNameContainer.innerHTML = getLocation(placeID !== null && placeID !== void 0 ? placeID : 0, (_c = data.location.country) !== null && _c !== void 0 ? _c : \"IT\");\n    // crea uno snapshot-data per ogni snapshot\n    var snapshotsContainer = document.querySelector(\".air-quality-item-container .card-body\");\n    data.dataSnapshots.forEach(function (snapshot) {\n        var snapshotElement = getSnapshot(snapshot);\n        snapshotsContainer.append(snapshotElement);\n    });\n    console.log(data.dataSnapshots);\n}\nfunction getMap(_a, lat, lng, zoom) {\n    var _b = _a.width, width = _b === void 0 ? 450 : _b, _c = _a.height, height = _c === void 0 ? 250 : _c;\n    if (zoom === void 0) { zoom = 18; }\n    var key = \"\";\n    return \"<iframe width=\\\"\".concat(width, \"\\\" height=\\\"\").concat(height, \"\\\" style=\\\"...\\\"\\n                        allowfullscreen\\n                        referrerpolicy=\\\"no-referrer-when-downgrade\\\"\\n                        src=\\\"https://www.google.com/maps/embed/v1/view?key=\").concat(key, \"&center=\").concat(lat, \",\").concat(lng, \"&zoom=\").concat(zoom, \"&maptype=satellite\\\"\\n                    >\\n                    </iframe>\");\n}\nfunction getSnapshot(snapshot) {\n    var snapshotElement = document.createElement(\"div\");\n    snapshotElement.className = \"snapshot-data card mt-3\";\n    var snapshotValues = snapshot.values\n        .map(function (v) {\n        var value = \"0\";\n        var type = \"\";\n        var v1 = v.value ? Number.parseInt(v.value) : 0;\n        switch (v.value_type) {\n            case \"humidity\":\n                type = \"Umidit√†\";\n                value = \"\".concat(Math.round(v1), \"%\");\n                break;\n            case \"temperature\":\n                type = \"Temperatura\";\n                value = \"\".concat(Math.round(v1), \"\\u00B0C\");\n                break;\n            case \"P1\":\n                type = \"PM 10\";\n                value = \"\".concat(v.value);\n                break;\n            case \"P2\":\n                type = \"PM25\";\n                value = \"\".concat(v.value);\n                break;\n        }\n        return \"<li class=\\\"list-group-item d-flex\\\">\\n                        <div style=\\\"width: 150px\\\">\".concat(v.value_type, \"</div>\\n                        <div>\").concat(value, \"</div>\\n                    </li>\");\n    })\n        .reduce(function (c, p) { return c + p; });\n    var dt = new Date(snapshot.timestamp);\n    var content = \"<ul class=\\\"b-1 list-group list-group-flush\\\">\\n                        \".concat(snapshotValues, \"\\n                    </ul>\\n                    <div class=\\\"card-body\\\" style=\\\"text-align: right\\\">\\n                        <strong> \").concat(dt.toLocaleDateString(\"it-IT\"), \" \").concat(dt.toLocaleTimeString(\"it-IT\"), \"</strong>\\n                    </div>\\n                    \");\n    snapshotElement.innerHTML = content;\n    return snapshotElement;\n}\n\n\n//# sourceURL=webpack://ts_live_json/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;